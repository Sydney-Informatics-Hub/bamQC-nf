
manifest {
  author = 'Georgie Samaha'
  name = 'bamQC-nf'
  description = 'Pipeline for producing quality control reports of alignment files (bam)'
  homePage = 'https://github.com/Sydney-Informatics-Hub/bamQC-nf'

// Mandate a minimum version of nextflow required to run the pipeline
  nextflowVersion = '!>=20.07.1'
}

// resume pipeline from last successful process
  resume = true 

// Set default parameters
// Any parameters provided by the user with a -params-file or 
// with --param (i.e. --outDir) command-line arguments will 
// override the values defined here
  params.ref		= false
  params.outDir		= './bamQC_results'
  params.cohort		= false
  params.runReports	= './bamQC_runInfo'
  params.help		= false
    
// Resource allocation 

  params.cpus = 4 // all tools capable of multi-threading

//  mem_samtoolsStats = '16 GB' // not yet allocated
//  mem_qualimapBamqc = '16 GB' // not yet allocated

// Preset use of containers with Singularity
  singularity {
	enabled = true
	autoMounts = true
	temp = '~/containers'
        }

  params.samtools__container = 'docker://quay.io/biocontainers/samtools:1.15.1--h1170115_0'
  params.mosdepth__container = 'docker://quay.io/biocontainers/mosdepth:0.3.1--ha7ba039_0'
  params.qualimap__container = 'docker://pegi3s/qualimap:2.2.1'
  params.multiqc__container = 'docker://quay.io/biocontainers/multiqc:1.12--pyhdfd78af_0' 

// Fail a task if any command returns non-zero exit code
  shell = ['/bin/bash', '-euo', 'pipefail']

// Produce a workflow diagram  
  dag {
    enabled = true
    file = 'runInfo/dag.svg'
  }

  report {
    enabled = true
    file = 'runInfo/report.html'
  }

  timeline {
    enabled = true
    file = 'runInfo/timeline.html'
  }

  trace {
    enabled = true
    file = 'runInfo/trace.txt'
  }
